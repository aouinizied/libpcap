version: '{build}'

branches:
  only:
    - libpcap-1.9
    
clone_depth: 5

matrix:
  fast_finish: true

install:
  - cinst winflexbison
  - win_flex --version
  - win_bison --version
  - appveyor DownloadFile http://www.winpcap.org/install/bin/WpdPack_4_1_2.zip
  - 7z x .\WpdPack_4_1_2.zip -oc:\projects\libpcap\Win32
  - appveyor DownloadFile https://nmap.org/npcap/dist/npcap-sdk-0.1.zip
  - 7z x .\npcap-sdk-0.1.zip -oc:\projects\libpcap\Win32
  - ls

environment:
  matrix:
    - GENERATOR: "MinGW Makefiles"
      SDK: WpdPack
      MINGW_ROOT: C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0
    - GENERATOR: "MinGW Makefiles"
      SDK: npcap-sdk-0.1
      MINGW_ROOT: C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0

build_script:
  #
  # Appveyor defaults to cmd.exe, so use cmd.exe syntax.
  #
  - type NUL >.devel
  - md build
  - cd build
  # Remove the default MinGW path
  - if "%GENERATOR%"=="MinGW Makefiles" set PATH=%PATH:C:\MinGW\bin;=%
  # Add the specified MinGW path
  - if "%GENERATOR%"=="MinGW Makefiles" set PATH=%MINGW_ROOT%\mingw64\bin;%PATH%
  # Remove the path to Git, so that we don't pick up its sh.exe, as
  # that breaks MinGW builds - CMake checks for that and fails in the
  # configuration stage
  - if "%GENERATOR%"=="MinGW Makefiles" set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - cmake -DPacket_ROOT=c:\projects\libpcap\Win32\%SDK% -G"%GENERATOR%" ..
  - if NOT "%GENERATOR%"=="MinGW Makefiles" msbuild /m /nologo /p:Configuration=Release pcap.sln
  - if "%GENERATOR%"=="MinGW Makefiles" mingw32-make
  - dir
